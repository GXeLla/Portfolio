@use "main" as *;
@use "mixins" as *;
@use "variables" as *;
@use "keyframes" as *;



.loading-container {
  width: 100%;
  height: 100%;
  background-color: $primaryColor;
  position: fixed;
  top: 0;
  left: 0;
  @include flex-center;
  flex-direction: column;
  overflow: hidden;
    z-index: 1000;
    opacity: 1;
    transition: opacity 1s ease;

  .light {
    width: 100%;
    height: 50px;
    position: absolute;
    top: 20%;
    right: 20%;
    rotate: -35deg;
    background: radial-gradient(
      ellipse,
      rgba(255, 240, 200, 0.7) 0%,
      rgba(255, 230, 180, 0.4) 30%,
      rgba(255, 210, 140, 0.2) 60%,
      transparent 90%
    );
    transform: translateX(-50%) scale(1.8);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2),
      inset 0 2px 5px rgba(255, 255, 255, 0.5),
      inset 0 -10px 20px rgba(255, 240, 200, 0.5),
      0 0 80px rgba(255, 240, 200, 0.8);
  }

  .bot {
    top: 80%;
    right: -50%;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2),
      inset 0 2px 5px rgba(255, 255, 255, 0.5),
      inset 0 -10px 20px rgba(255, 240, 200, 0.5),
      0 0 50px rgba(255, 240, 200, 0.8);
  }

  .footer {
    position: absolute;
    bottom: 50px;
    left: 50vw;
    transform: translateX(-50%);
    @include Avenir_Light($textColor, 18px);

    .hide {
      //   transform: translateX(-100%);
      background-color: $primaryColor;
      position: absolute;
      height: 100%;
      width: 50px;
      animation: showtxt 10s ease-in;
    }
  }

  .header-txt {
    position: absolute;
    top: 100px;
    left: 50vw;
    transform: translateX(-50%);
    @include Avenir_Light($textColor, 24px);
    opacity: 0.9;
  }

  .x {
    position: relative;
    transform: translate(7vw, calc(15vh + 30px + 47.5px));
    color: white;
    opacity: 0;
    animation: glow 2s forwards;
    animation-delay: 17s;
    @include Creepster(white, 20px);

    &::after {
      content: "eLa";
      @include Creepster(white, 12px);
      animation: appear 2s forwards;
      animation-delay: 19s;
      text-decoration: underline;
      opacity: 0;
    }
  }

  .stick-man {
    width: 100%;
    max-width: 23vw;
    min-width: 200px;
    height: 85px;

    .portal {
      width: 10px;
      height: 45px;
      border-top-left-radius: 4px;
      border-top-right-radius: 4px;
      background-image: radial-gradient($darkGray, white, #c6c6c6, white);
      position: relative;
      left: 4px;
      transform: translateY(40px);
      animation: portal 3s forwards;
    }

    .stickman {
      width: 40px;
      height: 40px;
      filter: invert(85%);
      position: relative;
      opacity: 0;
    }

    #stickman-pc {
      place-self: center;
      transform: translateX(5vw);
      animation: dissapear 15s forwards;
    }
    #stickman-walker {
      animation: walking 5s forwards;
      animation-delay: 1.5s;
      z-index: 51;
    }
    #stickman-runner {
      animation: runnin 9s forwards;
      animation-delay: 5.49s;
    }
    #stickman-kungfu {
      transform: translateX(3.5vw);
      animation: kick 2s forwards;
      animation-delay: 14.5s;
    }
    #stickman-ouch {
      animation: fall 3s forwards;
      animation-delay: 14.7s;
      transform: translateX(-3vw);
      rotate: 180deg;
    }
  }
}
.progress-bar-main-container {
  width: 100%;
  max-width: 30vw;
  min-width: 250px;
  background-color: $diffBlack;
  border-radius: 20px;
  @include flex-center;
      transition: opacity 1s ease;
  .bar {
    width: 100%;
    max-width: 80%;
    height: 30px;
    padding: 4px;
    border: 2px solid white;
    border-radius: 20px;
    overflow: hidden;
    display: flex;
    align-items: center;
    box-shadow: 0 0 30px rgba(59, 59, 59, 0.9);

    h2 {
      margin-top: 3px;
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      @include Bouncy($darkGray, 18px);
    }

    .mainBar {
      width: 100%;
      max-width: 0;
      height: 20px;
      background-color: white;
      border-radius: 10px;
      animation: animate 15s forwards;
      animation-delay: 3.33s;
    }
  }
}
.hidden{
    opacity: 0;
    pointer-events: none;
}